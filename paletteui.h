// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef paletteui_h
#define paletteui_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Value_Slider.H>
extern void cb_ClutSliderChange(Fl_Value_Slider*, void*);
#include <FL/Fl_Check_Button.H>
extern void cb_ClutStpToggle(Fl_Check_Button*, void*);
#include <FL/Fl_Box.H>
#include "Fl_ClutPalette.h"
extern void cb_PaletteClick(Fl_ClutPalette*, void*);
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Return_Button.H>
extern void cb_ClutOkay(Fl_Return_Button*, void*);
#include <FL/Fl_Button.H>
extern void cb_ClutCancel(Fl_Button*, void*);
extern void cb_ClutRevert(Fl_Button*, void*);
#include <FL/Fl_Spinner.H>
extern void cb_ClutSlotValue(Fl_Spinner*, void*);
extern void cb_ClutNewSlot(Fl_Button*, void*);
extern void cb_ClutDeleteSlot(Fl_Button*, void*);
extern void cb_ClutZoom(Fl_Spinner*, void*);
#include <FL/Fl_Choice.H>
extern void cb_ClutPrevDrawMode(Fl_Menu_*, long);
extern void cb_ClutPickMode(Fl_Button*, void*);

class PaletteUI : public Fl_Double_Window {
  void _PaletteUI();
public:
  PaletteUI(int X, int Y, int W, int H, const char *L = 0);
  PaletteUI(int W, int H, const char *L = 0);
  PaletteUI();
  Fl_Value_Slider *redSlider;
  Fl_Value_Slider *greenSlider;
  Fl_Value_Slider *blueSlider;
  Fl_Check_Button *stpToggle;
  Fl_Box *colorBox;
  Fl_ClutPalette *palette;
  Fl_Scroll *preview;
  Fl_Spinner *clutIndex;
  Fl_Spinner *zoomValue;
  static Fl_Menu_Item menu_Mode[];
  static Fl_Menu_Item *drawmode[6];
  Fl_Button *pickToggle;
};
#endif
